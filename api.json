{
	"/":[
			"register": {
							"method": "PUT",
							"value": "/register",
							"body": {
										"username": "String",
										"password": "String",
										"password2": "String",
										"roles": ["ROLE_ADMIN","ROLE_USER"] //  um desses dois roles
									},
							"reply": "ResponseEntity<>("Created a new account for "+ dao.userName , HttpStatus.OK)",
							"error": "ResponseEntity<>("A client already exists with the name "+ dao.userName , HttpStatus.CONFLICT)"
						},
			"login": {
					 	"method": "POST",
						"body": {
									"username": "String",
									"password": "String"
								},
						"reply": "200 OK & Authorization: Bearer ...",
						"error": "HttpStatus.Forbiden"
					 },
			"password": {
							"method": "POST",
							"body": {
										"username": "String",
										"password": "String",
										"password2": "String"
									},
							"Authorization": true,
							"reply": "ResponseEntity<>(j.toString() , HttpStatus.OK)",
							"error": "ResponseEntity<>(j.toString(), HttpStatus.NOT_FOUND) || ResponseEntity<>(new JSONObject().put("Error", "Token username and json username dont match").toString(),HttpStatus.BAD_REQUEST)"
						},
			"delete": {
					  		"method": "delete",
							"path": "user",
							"auth": "needed",
							"reply": "ResponseEntity<>(j.toString(),j.has("error")?(HttpStatus.BAD_REQUEST):(HttpStatus.OK))",
							"error": "ResponseEntity<>(new JSONObject().put("error","You got no permission to delete this account").toString(),HttpStatus.FORBIDDEN)"
					  },
			"logout": {
					  		"method": "DELETE",
							"auth": "needed",
							"reply": "ResponseEntity<>(j.toString(),j.has("error")?(HttpStatus.BAD_REQUEST):(HttpStatus.OK))"
					  },
			"account": {
							"method": "GET",
							"path": "user",
							"auth": "needed",
							"reply": "ResponseEntity<>(j.toString(),j.has("error")?(HttpStatus.BAD_REQUEST):(HttpStatus.OK))",
							"error": "ResponseEntity<>(new JSONObject().put("error","You got no permission to get information of this account").toString(),HttpStatus.FORBIDDEN)"
					   },
			"lock": {
						"method": "PUT",
						"path": "user",
						"auth": "needed",
						"reply": "ResponseEntity<>(j.toString(),j.has("error")?(HttpStatus.BAD_REQUEST):(HttpStatus.OK))",
						"error": "ResponseEntity<>(new JSONObject().put("error","You got no permission to lock of this account").toString(),HttpStatus.FORBIDDEN)"
					},
			"unlock": {
						"method": "PUT",
						"path": "user",
						"auth": "needed",
						"reply": "ResponseEntity<>(j.toString(),j.has("error")?(HttpStatus.BAD_REQUEST):(HttpStatus.OK))",
						"error": "ResponseEntity<>(new JSONObject().put("error","You got no permission to unlock this account").toString(),HttpStatus.FORBIDDEN)"
					  }
		]
}
